import argparsefrom gsBranch.arguments import ModelParams, PipelineParams, OptimizationParamsdef parse_arguments():    """       Parses command line arguments.       This function uses the argparse library to define and parse command line arguments. It sets up several arguments,       including model parameters, optimization parameters, and pipeline parameters, as well as an argument for specifying       the data directory. After parsing the arguments, the function returns a namespace object containing all specified       arguments.       Returns:           args: A namespace object containing command line arguments.       """    # Initialize the command line argument parser    parser = argparse.ArgumentParser()    # Add model parameter configuration    lp = ModelParams(parser)    # Add optimization parameter configuration    op = OptimizationParams(parser)    # Add pipeline parameter configuration    pp = PipelineParams(parser)    # Define a command line argument for specifying the location of the data directory    parser.add_argument("--data_dir", type=str, default="./data/", help="data directory")    # Parse the command line arguments and return    args = parser.parse_args()    return argsdef training():    pass    # 应该通过sfm首先初始化点云，这个点云用作3dgs的训练    # 两个网络先分开训练，然后在一些时候进行一个对另一个的指导，然后再在某个时候，反过来指导一次if __name__ == "__main__":    # 首先读取argumentss    args = parse_arguments()